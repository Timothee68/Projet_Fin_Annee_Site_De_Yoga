{% extends 'base.html.twig' %}

{% block title %}Gestion calendrier{% endblock %}

{% block body %}

<h1 class="mt-5 mb-5">Planning</h1>
<button type="button" class="btn btn-lg bg-secondary mt-5  mb-5 col-3 "><a href="{{ path('add_session') }}">Ajouter une session une préstation</a></button>

<table id="table_id" class="table table-striped mt-4 display">
    <thead>
        <tr class="table-blog">
            <th>Id</th>
            <th scope="col ">Préstation</th>
            <th scope="col ">jour de prestation</th>
            <th scope="col ">date de début</th>
            <th scope="col ">date de fin </th>
            <th scope="col ">nombre de place</th>
            <th scope="col ">Couleur d'evenement</th>
            <th scope="col ">Éditer</th>
            <th scope="col ">Supprimer</th>
        </tr>
    </thead>
    <tbody>
        {% for session in sessions %}
        <tr>
            <td>{{ session.id }}</td>
            <td>{{ session.benefit }}</td>
            <td>{{ session.startTime | date('d/m/Y')  }}</td>          
            <td>{{ session.startTime | date('H:i') }}</td>
            <td>{{ session.endTime | date('H:i')  }}</td>
            <td>{{ session.nbPlaceMax }}</td>
            <td>{{ session.backgroundColor }}</td>
            <td><a href="{{ path('edit_session', {'id': session.id}) }}">Éditer session</a></td>
            <td><a href="{{ path('delete_session', {'id': session.id}) }}">Supprimer</a></td>
        </tr>    
        {% else %}
        <tr>
            <td colspan="10">pas de résultat trouver </td>
        </tr>
    {% endfor %}
    </tbody>
</table>

<div class="container">
    <div id='calendar'></div>
</div>



<!-- Edit Modal -->
<div class="modal fade" id="schedule-edit">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Edit Your Schedule</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <!-- Modal body -->
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label>Schedule Name:</label>
                        <input type="text" class="form-control">
                    </div>
                </form>
            </div>
            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-success">Save Your Schedule</button>
            </div>
        </div>
    </div>
</div>

    <script>
         // on ajoute un evenement d'écoute sur le document charger sur cet page avec une fonction
         document.addEventListener('DOMContentLoaded', function() {
            // on selectionne l'élément qui a pour ID 'calendar'
            let calendarEl = document.getElementById('calendar');
            // calendar = nouveau calendrier et calandarEl seras composer de :
            let calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',    // ou possible de mettre 'listWeek' ou 'dayGridMonth'
                locale: 'fr',   // pour avoir le texte en français
                timeZone: 'Europe/Paris', // time zone de l'europe
                headerToolbar:  {       // modifier la disposition de la toullbar et ajouter des éléments
                    start: 'prev,next today', // preve nexte au début 
                    center: 'title',        //title au milieu
                    end: 'dayGridMonth timeGridWeek list'  // a la fin on a choix afficher le mois ou la semaine
                },
                hiddenDays: [ 0, 6 ], // pour masquer dimanche et samedi sur le rendue du calendrier
                buttonText: {  // permet de redefinir le texte des bouttons 
                    today: "Aujourd'hui",  
                    month: "Mois",
                    week: "Semaine",
                    list: "Liste"
                },
                allDaySlot: false, // defini si allday s'affiche ou non 
                slotMinTime: "08:00", // affichage des heure qu'a partir de de 8heures,
                slotMaxTime: "21:00", // affichage des heure jusqu'a 20heures,
                editable: true,  // on permet l'edition 
                eventResizableFromStart: true,  // on permet d'étirer l'évenement vers le haut pour ajouter du temps 
                nowIndicator: true, // place un trait rouge a l'heure ou l'on se trouve 
                events: {{ datas | raw }},
                eventClick: function(event) {
                    let modal = document.getElementById("#schedule-edit");
                         modal.modal();
                },
            });
           
            calendar.on('eventChange' , (e) => { // permet de changer l'évenement de date de le déplacer dans le calendrier
            let url = `/admin/calendar/${e.event.id}/edit` ;
            let donnees = {
                "start": e.event.start,
                "end": e.event.end,  // extended non pris en charge par les valeur par default de fullcalendar, on doit l'utilise pour récuperer les infos 
                "title": e.event.title,
                "backgroundColor": e.event.backgroundColor,
                "nbPlaceMax": e.event.extendedProps.nbPlaceMax,
            }
            let xhr = new XMLHttpRequest;
            xhr.open("PUT",url);
            xhr.send(JSON.stringify(donnees));
        
            // il faut encore traiter les données
        })
            calendar.render();
        });
    </script>
    
{% endblock %}
